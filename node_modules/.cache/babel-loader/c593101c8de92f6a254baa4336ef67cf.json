{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thamodhegodawatte/React-Portfolio/src/components/Section/Section.js\";\nimport React, { useState } from \"react\";\nimport \"./Section.scss\";\nimport { Image, Container, Row, Col, Button, Collapse } from \"react-bootstrap\"; // import styled from 'styled-components';\n\nimport \"../../styles/colors.scss\"; // interface SectionProps {\n//     readonly backgroundColor: string;\n// }\n\nexport const Section = props => {\n  // let childArray = [];\n  // React.Children.map(props.children, child => childArray.push(child));\n  // const [open, setOpen] = useState(false);\n  let content;\n\n  switch (props.numCol) {\n    // case 1:\n    //     content = <div className=\"content\">{props.children}</div>;\n    //     break;\n    // case 2:\n    //     // content = (\n    //     //     <Row>\n    //     //         <div className=\"content\">\n    //     //             <Col>{childArray[1]}</Col>\n    //     //             <Col>{childArray[2]}</Col>\n    //     //         </div>\n    //     //     </Row>\n    //     // );\n    //     content = <div className=\"content\">{props.children}</div>;\n    //     break;\n    default:\n      content = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n  } // const Section = styled.div<SectionProps>`\n  //     padding: 0;\n  //     background: ${props.backgroundColor};\n  //     width: 100vw;\n  //     transition: 1s;\n  //     min-height: 500px;\n  // `;\n  // content = props.isEditMode ? (\n  //   <textarea className=\"textbox\" value={props.children} onChange={props.handleChange}/>\n  // ) : (\n  //   <div className=\"content\">{props.children}</div>\n  // );\n\n\n  return (\n    /*#__PURE__*/\n    // <Col sm={12} md={12} lg={6} xl={4}>\n    _jsxDEV(\"div\", {\n      className: \"sectionContainer\",\n      style: {\n        background: props.backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this) // </Col>\n\n  );\n};\n_c = Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"sources":["/Users/thamodhegodawatte/React-Portfolio/src/components/Section/Section.js"],"names":["React","useState","Image","Container","Row","Col","Button","Collapse","Section","props","content","numCol","children","background","backgroundColor","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,iBAA7D,C,CACA;;AACA,OAAO,0BAAP,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAChC;AACA;AAEA;AACA,MAAIC,OAAJ;;AACA,UAAQD,KAAK,CAACE,MAAd;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACED,MAAAA,OAAO,gBAAG;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BD,KAAK,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAV;AAhBJ,GANgC,CAwBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACE;AACA;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAEJ,KAAK,CAACK;AAApB,OAFT;AAAA,8BAKE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBAAuBL,KAAK,CAACM;AAA7B;AAAA;AAAA;AAAA;AAAA,cALF,EAMGL,OANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAYE;;AAZF;AAcD,CAnDM;KAAMF,O","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Section.scss\";\nimport { Image, Container, Row, Col, Button, Collapse } from \"react-bootstrap\";\n// import styled from 'styled-components';\nimport \"../../styles/colors.scss\";\n\n// interface SectionProps {\n//     readonly backgroundColor: string;\n// }\n\nexport const Section = (props) => {\n  // let childArray = [];\n  // React.Children.map(props.children, child => childArray.push(child));\n\n  // const [open, setOpen] = useState(false);\n  let content;\n  switch (props.numCol) {\n    // case 1:\n    //     content = <div className=\"content\">{props.children}</div>;\n    //     break;\n    // case 2:\n    //     // content = (\n    //     //     <Row>\n    //     //         <div className=\"content\">\n    //     //             <Col>{childArray[1]}</Col>\n    //     //             <Col>{childArray[2]}</Col>\n    //     //         </div>\n    //     //     </Row>\n    //     // );\n    //     content = <div className=\"content\">{props.children}</div>;\n    //     break;\n    default:\n      content = <div className=\"content\">{props.children}</div>;\n  }\n  // const Section = styled.div<SectionProps>`\n  //     padding: 0;\n  //     background: ${props.backgroundColor};\n  //     width: 100vw;\n  //     transition: 1s;\n  //     min-height: 500px;\n  // `;\n  // content = props.isEditMode ? (\n  //   <textarea className=\"textbox\" value={props.children} onChange={props.handleChange}/>\n  // ) : (\n  //   <div className=\"content\">{props.children}</div>\n  // );\n\n  return (\n    // <Col sm={12} md={12} lg={6} xl={4}>\n    <div\n      className=\"sectionContainer\"\n      style={{ background: props.backgroundColor }}\n    >\n      {/* <Section backgroundColor={props.backgroundColor}> */}\n      <h3 className=\"title\">{props.title}</h3>\n      {content}\n      {/* <div className=\"content\">{props.children}</div> */}\n      {/* </Section> */}\n    </div>\n    // </Col>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}