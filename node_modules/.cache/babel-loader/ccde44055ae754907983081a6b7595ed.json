{"ast":null,"code":"import _slicedToArray from \"/Users/janujan/Documents/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/janujan/Documents/portfolio/src/Example.tsx\";\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { useDimensions } from \"./use-dimensions\";\nimport { MenuToggle } from \"./MenuToggle\";\nimport { Navigation } from \"./Navigation\";\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: \"spring\",\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: \"circle(30px at 40px 40px)\",\n    transition: {\n      delay: 0.5,\n      type: \"spring\",\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\nexport const Example = () => {\n  const _useCycle = useCycle(false, true),\n        _useCycle2 = _slicedToArray(_useCycle, 2),\n        isOpen = _useCycle2[0],\n        toggleOpen = _useCycle2[1];\n\n  const containerRef = useRef(null);\n\n  const _useDimensions = useDimensions(containerRef),\n        height = _useDimensions.height;\n\n  return React.createElement(motion.nav, {\n    initial: false,\n    animate: isOpen ? \"open\" : \"closed\",\n    custom: height,\n    ref: containerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(motion.div, {\n    className: \"background\",\n    variants: sidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(MenuToggle, {\n    toggle: () => toggleOpen(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/janujan/Documents/portfolio/src/Example.tsx"],"names":["React","useRef","motion","useCycle","useDimensions","MenuToggle","Navigation","sidebar","open","height","clipPath","transition","type","stiffness","restDelta","closed","delay","damping","Example","isOpen","toggleOpen","containerRef"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,CAACC,MAAM,GAAG,IAAV,MAAoB;AACxBC,IAAAA,QAAQ,EAAG,UAASD,MAAM,GAAG,CAAT,GAAa,GAAI,kBADb;AAExBE,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,SAAS,EAAE,EAFD;AAGVC,MAAAA,SAAS,EAAE;AAHD;AAFY,GAApB,CADQ;AASdC,EAAAA,MAAM,EAAE;AACNL,IAAAA,QAAQ,EAAE,2BADJ;AAENC,IAAAA,UAAU,EAAE;AACVK,MAAAA,KAAK,EAAE,GADG;AAEVJ,MAAAA,IAAI,EAAE,QAFI;AAGVC,MAAAA,SAAS,EAAE,GAHD;AAIVI,MAAAA,OAAO,EAAE;AAJC;AAFN;AATM,CAAhB;AAoBA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACEf,QAAQ,CAAC,KAAD,EAAQ,IAAR,CADV;AAAA;AAAA,QACpBgB,MADoB;AAAA,QACZC,UADY;;AAE3B,QAAMC,YAAY,GAAGpB,MAAM,CAAC,IAAD,CAA3B;;AAF2B,yBAGRG,aAAa,CAACiB,YAAD,CAHL;AAAA,QAGnBZ,MAHmB,kBAGnBA,MAHmB;;AAK3B,SACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,OAAO,EAAEU,MAAM,GAAG,MAAH,GAAY,QAF7B;AAGE,IAAA,MAAM,EAAEV,MAHV;AAIE,IAAA,GAAG,EAAEY,YAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,YAAtB;AAAmC,IAAA,QAAQ,EAAEd,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE,MAAMa,UAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAjBM","sourcesContent":["import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { useDimensions } from \"./use-dimensions\";\nimport { MenuToggle } from \"./MenuToggle\";\nimport { Navigation } from \"./Navigation\";\n\nconst sidebar = {\n  open: (height = 1000) => ({\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\n    transition: {\n      type: \"spring\",\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: \"circle(30px at 40px 40px)\",\n    transition: {\n      delay: 0.5,\n      type: \"spring\",\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\n\nexport const Example = () => {\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const containerRef = useRef(null);\n  const { height } = useDimensions(containerRef);\n\n  return (\n    <motion.nav\n      initial={false}\n      animate={isOpen ? \"open\" : \"closed\"}\n      custom={height}\n      ref={containerRef}\n    >\n      <motion.div className=\"background\" variants={sidebar} />\n      <Navigation />\n      <MenuToggle toggle={() => toggleOpen()} />\n    </motion.nav>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}